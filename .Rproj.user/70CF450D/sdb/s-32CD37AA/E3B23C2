{
    "collab_server" : "",
    "contents" : "#'function to calculate climandes indizes for objects of type \"climandes\"\n#'\n#'@param climandes Object of type Climandes as returned by \\code{\\link{make_climandes_object}}\n#'@param indicator Name of indicator to be calculated (see section \"Indicators\" below)\n#'@param aggregation: selection of time aggregation for indices\n#' \\itemize {\n#' \\item \"seasonal\": seasonal aggregation (\"MAM\",\"JJA\",\"SON\",\"DJF\")\n#' \\item \"monthly\": Monthly aggregation. For subset of months, define subset as integer array using parameter \\strong{aggregation_months}\n#' \\item \"other\": aggregation over all months defined as integer array in \\strong{aggregation_months}, e.g. c(1:2) aggregates over January and February\n#' \\item \"dates\": Aggregation of user defined dates defined in \\strong{start_days} and \\strong{end_days}. start_days and end days are arrays of format date or character(yyyy-mm-dd). If start and end dates are the same for all years they can also be specified as \"0000-mm-dd\", e.g. \"0000-01-01\".\n#' }\n#'@param trend: logial:calculate trends for the chosen indicator?\n#' Default = TRUE.\n#'@param ... for more indicator specific arguments see section \"Indicators\" below\n#'@section Indicators: The following indicators can be calculated with the ClimandesIndizes package. For a list of indicator arguments neccesary for each indicator, see links.\n#' \\itemize{\n#'   \\item \\strong{dd} Dry days (Pre > 1mm). For arguments and default values see \\code{\\link{get_arguments_index.dd}}\n#'   \\item \\strong{fd} Frost days (Tmin<0C). For arguments and default values see \\code{\\link{get_arguments_index.fd}}\n#'   \\item \\strong{th} Threshold function for days below/above user defined threshold (Variable >/>=/</<= threshold). For arguments and default values see \\code{\\link{get_arguments_index.th}}\n#'   \\item \\strong{th_range} Threshold function for days within user defined range of variable (Variable <=/< threshold 1 & >=/<= threshold 2). For arguments and default values see \\code{\\link{get_arguments_index.th_range}}\n#'   \\item \\strong{pheno_tmin} Days with minimum temperature below user defined threshold (Tmin < threshold). For arguments and default values see  \\code{\\link{get_arguments_index.pheno_tmin}}\n#'   \\item \\strong{pheno_tmax} Days with maximum temperature below user defined threshold (Tmax > threshold). For arguments and default values see  \\code{\\link{get_arguments_index.pheno_tmax}}\n#'   \\item \\strong{pheno_topt} Days with average temperature within user defined optimal temperature range (threshold <= Tavg <= threshold2). For arguments and default values see  \\code{\\link{get_arguments_index.pheno_topt}}\n#'   \\item \\strong{rainy_season_start} Start of rainy season. Choice between different rainy season indices. For definition of indices, arguments and default values see \\code{\\link{get_arguments_index.rainy_season_start}}\n#'   \\item \\strong{spi}   For arguments and default values see  \\code{\\link{get_arguments_index.spi}}\n#'   \\item \\strong{spi_forecast}  For arguments and default values see  \\code{\\link{get_arguments_index.spi_forecast}}\n#'\n#'     }\n#'@export\n#'@seealso \\code{\\link{calculate_index.climandes}}\ncalc_index <- function(climandes,indicator,aggregation,...) {\n\n  if (is(climandes,\"climandes\")==FALSE) stop (\"function needs climandes object\")\n  if(missing(aggregation)) stop(\"aggregation needs to be provided\")\n\n  class(climandes) <- append(indicator,\"climandes\")\n\n  climandes_index<- do.call(\"calculate_index\", list(climandes,aggregation,...))\n\n  climandes_index[c(\"lon\",\"lat\",\"data_info\")]<-climandes[c(\"lon\",\"lat\",\"data_info\")]\n  class(climandes_index) <- c(indicator,\"climandes_index\")\n    return(climandes_index)\n  }\n\n# calculate_index generic functions ---------------------------------------\ncalculate_index <- function (climandes,...){\n  UseMethod(\"calculate_index\")\n}\n\ncalculate_index.default<- function (climandes,...){\n  warning (\"no function for class or index is not class of climandes object\")\n}\n\n#' default index function for climandes objects\n#' @param climandes climandes object generated using the function make_climandes_object\n#' @seealso \\link{make_climandes_object}\n#' @param args List of arguments for calculation of indicator.  Arguments depend on type of indicator, for more information see documentation of calculate_index\n#' @family calculate_index\n#' @seealso \\link{calculate_index}\n#' @export\n#' @keywords internal\n\n\ncalculate_index.climandes <- function(climandes,aggregation,...){\n\n\n  args=list(aggregation=aggregation,...)\n\n  arguments=c(list(climandes=climandes),args)\n  #einlesen von Inidkatorargumenten\n\n  iargs<-do.call(get_arguments_index,arguments)\n  #\n  sel_time<-get_date_factors(climandes,args$aggregation,args$aggregation_months,args$start_days,args$end_days)\n\n  d=dim(climandes$data[[iargs$var]])\n  ld=length(d)\n\n  dat_help <- array(climandes$data[[iargs$var]],dim=c(prod(d[1:(ld-1)]),d[ld]))\n  ihelp <-rearange_by_year(apply(dat_help,1, function(x) do.call(iargs$ifun,c(list(x,sel_time),iargs$ifunargs))),levels(sel_time))\n\n  ireturn<-list()\n  ireturn$index<-array(ihelp,c(d[1:(ld-1)],dim(ihelp)[-1]),dimnames=c(rep(list(NULL),ld-1),dimnames(ihelp) [-1]))\n  ireturn$index_info <- c(iargs$ifunargs,iargs$plotargs,list(aggregation=args$aggregation))\n  ireturn$index_info$idims<-get_idims(climandes,args)\n\n  if (iargs$trend == TRUE){\n\n    itrend <- calc_index_trend(index=ireturn$index, targs=iargs$trendargs)\n    ireturn$index_trend <-  itrend$data\n    ### neu was ist das 1:4? falls man das aendert muss man auch in get_plot_data_points_trend die Namen anpassen\n    dimnames(ireturn$index_trend) <- c(dimnames(ireturn$index),list(c(1:4)))\n    #neu\n    ireturn$trend_info <- itrend$statistics\n\n  }\n\n  #to do: info ueber idims einbauen: p/lon+lat,(ens),(agg),year\n  #raussuchen aus data_info und args und dann checken ob es zu indexdimensionen passt\n\n  if (args$aggregation==\"dates\") ireturn$index_info<-c(ireturn$index_info,list(start_days=args$start_days,end_days=args$end_days))\n  return(ireturn)\n}\n\n\n",
    "created" : 1516711668442.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "2174850139",
    "id" : "E3B23C2",
    "lastKnownWriteTime" : 1516607473,
    "last_content_update" : 1516607473,
    "path" : "/prod/zue/climate/comm_serv/CLIMANDES_Data/src_C2/Rclimandes_2/imn_code/climandes-2/src/ClimIndVis/R/calc_climandes_indices_main.R",
    "project_path" : "R/calc_climandes_indices_main.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}