{
    "collab_server" : "",
    "contents" : "#' function for plotting spi for station data\n#'@param climandes_index_list 1 List of climandes_index objects (as returned by \\code{\\link{calc_climandes_indices}}).\n#' You can either plot\n#'  \\itemize{\n#'   \\item different indices calculated from the same dataset (...$data_info$data_name has to be the same for all element of climandes_index_list) or\n#'   \\item one indice for different datasets (class of list elements and ...$index_info$iname have to be the same for all element of climandes_index_list)\n#'   }\n#'@param trendplots logical. Array of same length as climandes_index_list indicating for each index wether or not the trend should be plotted. If not specified all values are set to false.\n#'@param output Type of output for plot files (\"png\",\"jpg\"), default is NULL and plot will be openend in a new window\n#'@param plotdir Directory where plots should be saved (necesary if output is not NULL)\n#'@param plotnamestring String of names for plots. The final name will be paste0(plotnamestring,\"_agg\",agg,\"_\",pname,\".png\")\n#'   optional parameters\n#'@param pcols plot colors.  Array of colors of same length as climandes_index_list. If not provided colors are set to 1:length(climandes_index_list)\n#'@param selpoints Array to select subset of points to plot,there are two options:\n#'    \\itemize{\n#'   \\item character array of station names (works only if names are defined in climandes_index objects ...$data_info$pnames and if they are the same for all objects in climandes_index_list)\n#'   \\item integer array of station indices (works only if  coordinates of all objects in climandes_index_list are the same)\n#'   }\n#'@param plotstart Start year of plot, e.g plotstart = 1990 ends at end of forecast time.\n#'@param plotclim Plot Climatology, if now forecast is available or plot both.\n#'@param ylims Limits of xaxis for plot of format ylims=c(ymin,ymax). If not provided limits are taken from the data\n#'@param pwidth,pheight,pres  Width,Height and Resolution of plot (see width in  \\code{\\link[grDevices]{png}}). Default values are pwidth=2000,pheight=1300,pres=250\n#'@param cex cex of plots (see par()). Default=1\n#'\n#'@export\nplot_spi_forecast <- function(climandes_index_list,trendplots,output=NULL,plotdir=NULL,plotnamestring=NULL,ylims=NULL,plotstart =NULL,pwidth=2000,pheight=1300,pres=250,cex=1,...){\n  opargs<-list(...)\n\n  if(any(is.element(class(climandes_index_list), \"climandes_index\"))) climandes_index_list<-list(climandes_index_list)\n  if(missing(plotdir) & !is.null(output)) stop(\"output directory <<plotdir>> needs to be sepecified\")\n  if(missing(plotnamestring) & !is.null(output)) stop(\"string for naming of outputfiles <<plotnamestring>> needs to be specified\")\n  if (missing(trendplots)) trendplots=rep(FALSE,length(climandes_index_list))\n  if(length(trendplots) != length(climandes_index_list)) {\n    trendplots = c(trendplots,rep(FALSE,length(climandes_index_list)-length(trendplots)))\n    warning (\"length of <<trendplots>> differs from length of <<climandes_index_list>> , array filled up with <<FALSE>>\")\n  }\n  if(all(trendplots)==TRUE){\n    if(sum(sapply(climandes_index_list,function(x) is.na(x[\"index_trend\"]))==TRUE)>1) warning(\" Trend calculation in Climandes Index List is missing \")}\n  if(is.null(opargs$pcols)){\n    pcols=gplots::colorpanel(length(climandes_index_list), \"blue\",\"green\")\n    warning (\"plot colors <<pcols>> not specified, set no 1:length(climandes_index_list)\")\n  } else pcols=opargs$pcols\n\n  lty <- rep(1, length(climandes_index_list))\n  cl<-unique(sapply(climandes_index_list, function(x) class(x)[1]))\n  datname<-unique(sapply(climandes_index_list,function(x) x$data_info$data_name))\n  class_objects<-ifelse(length(cl)>1,\"dif\",\"same\")\n  if(class_objects==\"same\" & (all(cl==\"rainy_season_start\") || all(cl==\"th\") || all(cl==\"th_range\"))){\n    if(length(unique(sapply(climandes_index_list, function(x) x$index_info$iname)))>1) class_objects=\"dif\"\n  }\n  if(class_objects==\"dif\" & length(datname)>1) stop(\"either index or dataset need to be the same for all objects on climandes_index_list\")\n\n  test<-unique(sapply(climandes_index_list, function(x) if( grep(\"p\",x$data_info$type)!=1) stop(\"one or more climandex_index objects are not of point type\")))\n  if (length(unique(sapply(climandes_index_list, function(x) x$index_info$iformat)))!=1) stop(\"objects in climandes_index_list have different format, check  <<data_info$iformat>>\")\n  if (length(unique(sapply(climandes_index_list, function(x) x$index_info$aggregation)))!=length(climandes_index_list[[1]]$index_info$aggregation)) stop(\"objects in climandes_index_list have different aggregation, check  <<data_info$aggregation>>\")\n\n  tdims<-get_matching_tdims_index(climandes_index_list,...)\n  tdims$hist_time <- sapply(climandes_index_list, function(x) {\n    time <- x$index_info$hist_time\n    return(time)\n  })\n  pdims <-match_pdims_index(climandes_index_list,...)\n  fdims <- get_fdims_index(climandes_index_list,...)\n\n  pinfo<-list()\n  if (is.null(climandes_index_list[[1]]$index_info$iformat)){\n    pinfo$ylab=\"\"\n    pinfo$ylims=c(range(sapply(climandes_index_list, function(x) x$index),na.rm=TRUE))\n    pinfo$yaxis=FALSE }\n\n  pinfo$ylab=paste0(\"SPI \", climandes_index_list[[1]]$index_info$timescale)\n  pinfo$ylims=c(-4,4)\n  pinfo$yaxis=FALSE\n\n  pinfo$titlestring<-climandes_index_list[[1]]$index_info$iname\n  pinfo$legend<-sapply(climandes_index_list,function(x) x$data_info$data_name)\n\n  if (TRUE%in% trendplots){\n    pinfo$legend[[length(pinfo$legend)+1]] <- \"Fit\"\n    pinfo$legend[[length(pinfo$legend)+1]] <- \"Lw\"\n\n  }\n\n  for ( pp in 1:pdims$pnumber){\n\n      pdata<-get_plot_data_spi(climandes_index_list,years=tdims$year,ip=pp,pdiminfo=pdims$dims)\n      fdata<-get_plot_data_fc(climandes_index_list,years=fdims$years,ip=pp,fdiminfo=fdims$ipoint)\n      pname<-ifelse(is.null(pdims$pnames[pp]),as.character(pp),pdims$pnames[pp])\n      agg <- NA\n\n      if(is.null(output)) X11()\n      else if(!is.na(agg)){\n        plotfile<-paste0(plotdir,plotnamestring,\"_agg\",agg,\"_\",pname)\n      } else plotfile<-paste0(plotdir,plotnamestring,\"_\",pname)\n      if(isTRUE(all.equal(output,\"png\"))) {\n        png(paste0(plotfile,\".png\"),width=pwidth,height=pheight,res=pres)\n      } else if (isTRUE(all.equal(output,\"jpg\"))) {\n        jpeg(paste0(plotfile,\".jpeg\"),width=pwidth,height=pheight,res=pres)\n      }\n      tottime <- c(tdims$hist_time, fdims$time)\n      if (is.null(plotstart)) {prange <- c(1,length(tottime))}\n      else {\n        start <- as.numeric(gsub(\"-.*\",\"\",as.character(tottime)))\n        prange <- c(which(start==plotstart,arr.ind = TRUE)[1] , length(tottime))\n        }\n\n      plot(0,type=\"n\",xlab=\"\",ylab=pinfo$ylab,axes=FALSE,xlim=prange,ylim=pinfo$ylims)\n      axis(side=1,labels=tottime,at=1:length(tottime))\n      if(pinfo$yaxis==TRUE){\n        axis(side=2,labels=pinfo$ylabels,at=c(pinfo$yat))\n      } else axis(side=2)\n\n      for (i in 1:length(climandes_index_list)){\n        colv <- col2rgb(pcols[i])\n        lines(as.vector(pdata[[i]]),col=pcols[i],cex=cex)\n        points(as.vector(pdata[[i]]),pch=16,col=pcols[i],cex=cex)\n        abline(v= seq(1,length(tottime),1), col=\"gray77\", lty=2)\n\n        # plot forecast\n        fdat <- as.vector(fdata[[i]]$mean_spi)\n        fdat <- fdat[!is.na(fdat)]\n        sdat <- as.vector(fdata[[i]]$sd_spi)\n        sdat <- sdat[!is.na(sdat)]\n        polygon(c(1:length(fdat),length(fdat):1)+length(tdims$hist_time),\n                c(fdat-sdat,rev(fdat+sdat)), border=NA,col=rgb(colv[1],colv[2],colv[3],alpha=105, maxColorValue = 255),cex=cex)\n        lines(y=fdat,x=(1:length(fdat))+length(tdims$hist_time), col=pcols[i],cex=cex)\n        points(y=fdat,x=(1:length(fdat))+length(tdims$hist_time), col=pcols[i],cex=cex,pch=16)\n\n\n        #plot climatology\n        cdat <- as.vector(cdata[[i]]$mean_spi)\n        cdat <- fdat[!is.na(cdat)]\n        sdat <- as.vector(cdata[[i]]$sd_spi)\n        sdat <- sdat[!is.na(sdat)]\n        polygon(c(1:length(fdat),length(fdat):1)+length(tdims$hist_time),\n                c(fdat-sdat,rev(fdat+sdat)), border=NA,col=rgb(colv[1],colv[2],colv[3]-20,alpha=105, maxColorValue = 255),cex=cex)\n        lines(y=fdat,x=(1:length(fdat))+length(tdims$hist_time), col=pcols[i],cex=cex)\n        points(y=fdat,x=(1:length(fdat))+length(tdims$hist_time), col=pcols[i],cex=cex,pch=16)\n\n\n\n\n        if (trendplots[i]==TRUE){\n          tdata<-get_plot_data_points_trend(climandes_index_list,iagg=agg,years=tdims$year,ip=pp,pdiminfo=pdims$dims)\n\n          if (TRUE %in% is.na(tdata[[i]]$data[length(tdata[[i]]$data[,1]),])){\n            tdata[[i]]$data<- tdata[[i]]$data[-length(tdata[[i]]$data[,1]),]\n          }\n\n          #if (!is.na(nagg)){\n          if (!is.na(agg)){\n            if (TRUE %in% is.na(tdata[[i]]$data[length(tdata[[i]]$data[,1]),])){\n              tdata[[i]]$data<- tdata[[i]]$data[-length(tdata[[i]]$data[,1]),]\n            }\n\n            # if (!is.na(nagg)){\n            if (!is.na(agg)){\n              polygon(c(1:length(tdata[[i]]$data[,1]),length(tdata[[i]]$data[,1]):1),c(tdata[[i]]$data[,2],rev(tdata[[i]]$data[,3])),border=NA,col=rgb(colv[1],colv[2],colv[3], alpha=70, maxColorValue = 255),cex=cex)\n              lines(tdata[[i]]$data[,1],type=\"l\",col=rgb(colv[1],colv[2],colv[3],maxColorValue = 255),cex=cex)\n              lines(tdata[[i]]$data[,4],type=\"l\",col=rgb(colv[1],colv[2],colv[3],maxColorValue = 255),lty=2,cex=cex)\n\n            } else {\n              polygon(c(1:length(tdata[[i]]$data[,1]),length(tdata[[i]]$data[,1]):1),c(tdata[[i]]$data[,2],rev(tdata[[i]]$data[,3])),border=NA,col=rgb(colv[1],colv[2],colv[3], alpha=70, maxColorValue = 255),cex=cex)\n              lines(tdata[[i]]$data[,1],type=\"l\",col=rgb(colv[1],colv[2],colv[3],maxColorValue = 255),cex=cex)\n              lines(tdata[[i]]$data[,4],type=\"l\",col=rgb(colv[1],colv[2],colv[3],maxColorValue = 255),lty=2,cex=cex)\n\n            }\n            pcols <- c(pcols, rep(\"black\",2))\n          }\n        }\n\n        if(is.na(agg)){\n          mtext(paste0(pinfo$titlestring,\",\",agg,\"-\",pname,\"( \", pdims$lon[pp],\"/ \",pdims$lat[pp],\")\"),side=3,line=0.8,cex=1)\n        } else mtext(paste0(pinfo$titlestring,\",\",pname,\"( \", pdims$lon[pp],\"/ \",pdims$lat[pp],\")\"),side=3,line=0.8,cex=1)\n      }\n      box()\n      legend(\"topright\",legend=pinfo$legend,col=pcols,lty=lty,bty=\"n\")\n      if (TRUE %in% trendplots){\n        lty <- c(lty, rep(c(2,3), length(climandes_index_list)))\n\n        if(!is.na(agg) & length(nagg)> 1 ){\n          trinfo <- lapply(climandes_index_list, function(ll) index_array(ll$trend_info,c(1),pdims$dims[[1]]$ipoint[pp],drop=TRUE))\n          mtext(paste0(\"Period: \",paste0(trinfo[[1]][which(nagg==agg),1],\"-\",trinfo[[1]][which(nagg==agg),2]),\"  p-value: \",paste0(1:length(climandes_index_list),\":\",round( as.numeric(sapply(trinfo,function(x) x[which(nagg==agg),3])),3),\" \",collapse=\"\") ,\"  relative trend: \",paste0(1:length(climandes_index_list),\":\",round(as.numeric(sapply(trinfo,function(x) x[which(nagg==agg),4])),3),\" \",collapse=\"\")),side=3, line = 0.1,cex=0.7)\n        } else{\n          trinfo <- sapply(climandes_index_list, function(ll) index_array(ll$trend_info,c(1),pdims$dims[[1]]$ipoint[pp]))\n          mtext(paste0(\"Period: \",trinfo[1,1],\"-\",trinfo[2,1],\"  p-value: \",paste0(1:length(climandes_index_list),\":\",round( as.numeric(trinfo[3,]),3),\" \",collapse=\"\") ,\"  relative trend: \",paste0(1:length(climandes_index_list),\":\",round(as.numeric(trinfo[4,]),3),\" \",collapse=\"\")),side=3, line = 0.1,cex=0.7)\n\n        }}\n\n      if(!is.null(output)) dev.off()\n\n  }\n}\n\n\n\nget_fdims_index <- function(climandes_index_list,...){\n  fdims = list()\n  years <- sapply(climandes_index_list, function(x){\n    dl <- length(dim(x$index_fcst))\n    years <- dimnames(x$index_fcst)[dl]\n    return(years)},simplify=TRUE )\n  ipoint <- lapply(climandes_index_list,function(x){1:dim(x$index)[1]})\n  time <- sapply(climandes_index_list, function(x) {x$index_info$fcst_time})\n  return(list(ipoint=ipoint,years=years, time=time))\n}\n\n\nget_plot_data_spi<-function(climandes_index_list,years,ip,pdiminfo){\n  pdata<-mapply(function(x,y) {\n   data<-index_array(x$index, c(1,which(x$index_info$idims==\"agg\"),which(x$index_info$idims==\"year\")), list(y$ipoint[ip],seq(1,12,1),years), drop=TRUE)}\n   ,climandes_index_list,pdiminfo,SIMPLIFY = FALSE)\n  return(pdata)\n}\n\n\nget_plot_data_fc<-function(climandes_index_list,years,ip,fdiminfo){\n  fdata<-mapply(function(x,y) {\n    dims <- dim(x$index_fcst)\n    data<-index_array(x$index_fc, c(1:length(dims)),\n                      list(y[ip],1:dims[2],1:dims[3],years[[1]]))\n    mean_spi<-apply(data,c(length(dims)-1,length(dims)),mean,na.rm=TRUE)\n    sd_spi <- apply(data,c(length(dims)-1,length(dims)),sd,na.rm=TRUE)\n    return(list(data=data,mean_spi=mean_spi, sd_spi=sd_spi))},\n    climandes_index_list,fdiminfo,SIMPLIFY = FALSE)\n  return(fdata)\n}\n\n",
    "created" : 1516611780029.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1843309759",
    "id" : "8CCE5CA8",
    "lastKnownWriteTime" : 1516723280,
    "last_content_update" : 1516723282769,
    "path" : "/prod/zue/climate/comm_serv/CLIMANDES_Data/src_C2/Rclimandes_2/imn_code/climandes-2/src/ClimIndVis/R/plot_spi_forecast.R",
    "project_path" : "R/plot_spi_forecast.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}