% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoplot_anomaly_ts.R,
%   R/autoplot_ts_stations_anom.R
\name{autoplot_anomaly_ts}
\alias{autoplot_anomaly_ts}
\title{Wrapper function to calculate and plot timerseries of indices from station data}
\usage{
autoplot_anomaly_ts(
  dat_p,
  index,
  index_args,
  ts_type = "single_ts",
  selpoints = NULL,
  refyears = NULL,
  output = NULL,
  plotdir = NULL,
  plotname = NULL,
  title = "",
  plot_title = TRUE,
  plot_legend = TRUE,
  ylims = NULL,
  pwidth = 2000,
  pheight = 1300,
  pres = 250,
  cex = 1,
  text_cex = 1,
  ...
)

autoplot_anomaly_ts(
  dat_p,
  index,
  index_args,
  ts_type = "single_ts",
  selpoints = NULL,
  refyears = NULL,
  output = NULL,
  plotdir = NULL,
  plotname = NULL,
  title = "",
  plot_title = TRUE,
  plot_legend = TRUE,
  ylims = NULL,
  pwidth = 2000,
  pheight = 1300,
  pres = 250,
  cex = 1,
  text_cex = 1,
  ...
)
}
\arguments{
\item{dat_p}{A Climindvis-object  with type = "p" generated by \code{\link{make_object}}. For ts_type="multi_dat" dat_p is a list of climindivs-objects with type = "p" or "p_hc".}

\item{index}{Name of index to be calculated or array of indices to be calculated for ts_type = "multi_ind".}

\item{index_args}{List of arguments for index. See \code{\link{calc_index}}.\cr For ts_type = "multi_ind", index_args is a list containing a list of index arguments for each of the indices.\cr For ts_type="multi_agg" index_args is a list containing a list of index arguments for each aggregation type (e.g. if you want to compare annual and seasonal values type index_args=list(list(aggt="annual"),list(aggt="seasonal")).}

\item{ts_type}{Type of time series plot to be drawn:
\itemize{
  \item "single_ts" plots one index for one dataset. Returns a seperate plot for each station and each aggregation.
  \item "multi_ind" plots several indices for one dataset. Returns a seperate plot for each station and each aggregation. (Ensemble not implemented).
  \item "multi_agg" plots one index and one dataset. Returns a seperate plot for each station and combines aggregation values in one plot. (Ensemble not implemented).
  \item "multi_point" plots one index and one dataset. Returns a seperate plot for each aggregation value and combines several stations in one plot (either all stations or a subset to be specified in selpoints). (Ensemble not implemented).
  \item "multi_dat" plots one index for multiple datasets (e.g. observations, reanalyses and hindcasts). Returns a seperate plot for each station and each aggregation. If ensemble data is provided, the spread of the ensemble members is plotted.
}}

\item{selpoints}{Array to select subset of points to plot. There are two options:
 \itemize{
\item Character array of station names (works only if names are defined in climindvis_index objects ...$data_info$pnames and if they are the same for all objects in climindvis_index_list)
\item Integer array of station indices (works only if  coordinates of all objects in climindvis_index_list are the same)
}}

\item{refyears}{Integer array of reference years for calculation of anomaly. Default=1981:2010}

\item{output}{Format of image to be plotted ("png", "jpeg", "tiff", "pdf","dev.new").  Default = NULL, output to null device (getOption("device") will show you the null device. If you are not using RStudio, NULL and dev.new will give the same output).}

\item{plotdir}{Character string of path of directory for saving plots. Ignored if  \emph{output} is NULL or "dev.new".}

\item{plotname}{Optional. Character string. First part of plot name followed by character string containing index name/aggregation/time period/... depending on the autoplot function. Default = "".}

\item{title}{Optional. Character string. If provided added above the plot in addition to default information from the respective function (e.g. index name/aggregation/time period/...). Default = "", no additional title is written.}

\item{plot_title}{Logical. Add plot title and additional information to graphic? Default = TRUE.}

\item{plot_legend}{Logical. Add plot legend of depicted stations to graphic? Default = TRUE.}

\item{ylims}{Limits of xaxis for plot of format ylims=c(ymin,ymax). If a individual limits for every plot are needed, set ylims to "ind". If not provided limits are taken from the data and are equal in all plots.}

\item{pwidth}{Width of plotting region of output (as input for jpeg, png, ...). For output = pdf, pwidth is set to pwidth/pres. Default = 2000.}

\item{pheight}{Height of plotting region of output (as input for jpeg, png, ...). For output = pdf, pheight is set to pheight/pres.  Default = 1300.}

\item{pres}{Graphics resolution. Default = 250.}

\item{cex}{cex of plots (see par()). Default=1}

\item{text_cex}{size of text plotted in graph. Default=1}

\item{...}{Optional parameters for shading. Shading only works for type = "single_ts"
\itemize{
\item \strong{pcols} Array of colors with required length, e.g. 1 for a single timeseries and number of indices, aggregations, points, datasets for <ts_type>. If no colors are provided, colors are set to default colors.
\item \strong{shading} Optional. Logical. Add shading of areas for different areas of y-values to plot ? If TRUE nshading ( and yval_shading) need to be provided. See Details for more information.
\item \strong{nshading} Optional. Number of shading categories.
\item \strong{yval_shading} Optional. Array of the same length as \emph{nshading}+1 with user defined y-limits for shading polygons.
\item \strong{col_shading} Optional. Color for shading. Array of same length as nshading.

}}
}
\description{
The function calls \code{\link{calc_index}} and returns an anomaly timeseries plot with different options for indices and aggregation described below. \cr
At the moment the function does not have the options to plot trends, please use autoplot_ts_stations for plotting trends. \cr

The function calls \code{\link{calc_index}} and returns an anomaly timeseries plot with different options for indices and aggregation described below. \cr
At the moment the function does not have the options to plot trends, please use autoplot_ts_stations for plotting trends. \cr
}
\section{Details}{


The missing values displayed when plot_title = TRUE denotes the percentage of missing daily values in the selected aggregation period.

By passing the optional parameters \emph{shading}, \emph{nshading} (\emph{ycal_shading}) and \emph{col_shading} to the function, horizontal shading polygons can be added to the plot. \cr
For example, to mark the area below zero in blue and the one above zero in red when looking at temperature indices such as maximum teperatures one has to pass the following values to the function: \emph{shading}=TRUE, \emph{nshading}=2, \emph{yval_shading}=c(-999,0,999), \emph{col_shading}=c("blue","red").\cr
If you want to add equidistant shading categories (e.g. if you issue a tercile forecast and want to show the corresponding values in the climatology you just need to specify \emph{nshading} which would be equal to the number of forecast categories and the function calculates the corresponding category thresholds. This is used e.g. by the \code{\link{autoplot_forecast_stations}} function when \emph{plot_climatology}=TRUE.

Trendplots are currently not implemented in this function.



The missing values displayed when plot_title = TRUE denotes the percentage of missing daily values in the selected aggregation period.

By passing the optional parameters \emph{shading}, \emph{nshading} (\emph{ycal_shading}) and \emph{col_shading} to the function, horizontal shading polygons can be added to the plot. \cr
For example, to mark the area below zero in blue and the one above zero in red when looking at temperature indices such as maximum teperatures one has to pass the following values to the function: \emph{shading}=TRUE, \emph{nshading}=2, \emph{yval_shading}=c(-999,0,999), \emph{col_shading}=c("blue","red").\cr
If you want to add equidistant shading categories (e.g. if you issue a tercile forecast and want to show the corresponding values in the climatology you just need to specify \emph{nshading} which would be equal to the number of forecast categories and the function calculates the corresponding category thresholds. This is used e.g. by the \code{\link{autoplot_forecast_stations}} function when \emph{plot_climatology}=TRUE.

Trendplots are currently not implemented in this function.
}

\examples{
 data("object_st","object_hc_st") # load example data
plotdir="./" # define a plot directory here or change output to NULL or "dev.new".

## ts_type = single_ts
autoplot_anomaly_ts(
      object_st, index = "sdii",
      index_args = list(aggt = "other", aggmons = c(1:3)),
      ts_type = "single_ts", pcols = "royalblue",
      output = "png", plotdir = plotdir, plotname = Sys.Date())

 # add shading
autoplot_anomaly_ts(
      object_st, index = "tnn",
      index_args = list(aggt = "other", aggmons = c(4)),
      ts_type = "single_ts", pcols = "royalblue", selpoints=2,
      shading = TRUE, nshading = 2, yval_shading = c(-999,0,999),col_shading = c("blue","red"),
      output = "png", plotdir = plotdir, plotname = Sys.Date())

## ts_type = multi_ind
index = c("txn", "txx","dd")
index_args = list(
      txn = list(aggt = "other", aggmons = c(1:3)),
      txx = list(aggt = "other", aggmons = c(1:3)),
      tnx = list(aggt = "other", aggmons = c(1:3)))
autoplot_anomaly_ts(
      dat_p = object_st, index = index, index_args = index_args,
      ts_type = "multi_ind",
      output = "png", plotdir = plotdir, plotname = Sys.Date())


## ts_type = "multi_agg"
index_args = list (
      list(aggt="seasonal",selagg=c("MAM")),
      list(aggt="monthly", selagg=c("1","2","3")))
autoplot_anomaly_ts(
      object_st, index = list("txn"), index_args=index_args,
      ts_type = "multi_agg",
      output = "png", plotdir = plotdir)


## ts_typ = "multi_point"
autoplot_anomaly_ts(
      object_st, c("dd"), index_args=list(aggt = "other", aggmons = c(1:2)),
      ts_type = "multi_point", selpoints=c(2,3),
      output = "png", plotdir = plotdir, plot_title = FALSE)

## ts_type = "multi_dat"
autoplot_anomaly_ts(
     list(object_st, object_hc_st), index = "txn", index_args=list(aggt="monthly", selagg=5),
     ts_type = "multi_dat",
     output = "png", plotdir = plotdir, plotname = Sys.Date())
 data("object_st","object_hc_st") # load example data
plotdir="./" # define a plot directory here or change output to NULL or "dev.new".

## ts_type = single_ts
autoplot_anomaly_ts(
      object_st, index = "sdii",
      index_args = list(aggt = "other", aggmons = c(1:3)),
      ts_type = "single_ts", pcols = "royalblue",
      output = "png", plotdir = plotdir, plotname = Sys.Date())

 # add shading
autoplot_anomaly_ts(
      object_st, index = "tnn",
      index_args = list(aggt = "other", aggmons = c(4)), 
      ts_type = "single_ts", pcols = "royalblue", selpoints=2,
      shading = TRUE, nshading = 2, yval_shading = c(-999,0,999),col_shading = c("blue","red"),
      output = "png", plotdir = plotdir, plotname = Sys.Date())

## ts_type = multi_ind
index = c("txn", "txx","dd")
index_args = list(
      txn = list(aggt = "other", aggmons = c(1:3)),
      txx = list(aggt = "other", aggmons = c(1:3)),
      tnx = list(aggt = "other", aggmons = c(1:3)))
autoplot_anomaly_ts(
      dat_p = object_st, index = index, index_args = index_args,
      ts_type = "multi_ind", 
      output = "png", plotdir = plotdir, plotname = Sys.Date())


## ts_type = "multi_agg"
index_args = list (
      list(aggt="seasonal",selagg=c("MAM")),
      list(aggt="monthly", selagg=c("1","2","3")))
autoplot_anomaly_ts(
      object_st, index = list("txn"), index_args=index_args,
      ts_type = "multi_agg",
      output = "png", plotdir = plotdir)


## ts_typ = "multi_point"
autoplot_anomaly_ts(
      object_st, c("dd"), index_args=list(aggt = "other", aggmons = c(1:2)),
      ts_type = "multi_point", selpoints=c(2,3),
      output = "png", plotdir = plotdir, plot_title = FALSE)

## ts_type = "multi_dat"
autoplot_anomaly_ts(
     list(object_st, object_hc_st), index = "txn", index_args=list(aggt="monthly", selagg=5),
     ts_type = "multi_dat", 
     output = "png", plotdir = plotdir, plotname = Sys.Date())
}
\seealso{
Other autoplot_functions: 
\code{\link{autoplot_anomaly_map}()},
\code{\link{autoplot_climatology_map}()},
\code{\link{autoplot_forecast_map}()},
\code{\link{autoplot_forecast_spi}()},
\code{\link{autoplot_forecast_stations}()},
\code{\link{autoplot_overview_stations}()},
\code{\link{autoplot_trend_map}()},
\code{\link{autoplot_ts_stations}()},
\code{\link{autoplot_verification_map}()}

Other autoplot_functions: 
\code{\link{autoplot_anomaly_map}()},
\code{\link{autoplot_climatology_map}()},
\code{\link{autoplot_forecast_map}()},
\code{\link{autoplot_forecast_spi}()},
\code{\link{autoplot_forecast_stations}()},
\code{\link{autoplot_overview_stations}()},
\code{\link{autoplot_trend_map}()},
\code{\link{autoplot_ts_stations}()},
\code{\link{autoplot_verification_map}()}
}
\concept{autoplot_functions}
